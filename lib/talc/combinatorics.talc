# http://en.wikipedia.org/wiki/Combinatorics

# Permutations without repetitions.
# Order matters, and each object can be chosen only once.
# n: number of objects from which to choose.
# r: number of objects to be chosen.
function permutations(n, r: int): int {
    assert n > r;
    return n!/(n-r)!;
}

# Combinations without repetitions.
# Order does not matter, and each object can be chosen only once.
# n: number of objects from which to choose.
# k: number of objects to be chosen.
function combinations(n, k: int): int {
    return n!/(k! * (n-k)!);
}

# Combinations with repetitions.
# Order does not matter, and each object can be chosen multiple times.
# n: number of objects from which to choose.
# k: number of objects to be chosen.
function multiset_coefficient(n, k: int): int {
    return (n + k - 1)!/(k! * (n - 1)!);
}

# FIXME: we shouldn't run these tests every time someone imports this library.
assert permutations(5, 3) == 60;
assert combinations(10, 5) == 252;
assert multiset_coefficient(10, 3) == 220;
