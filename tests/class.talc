#!/usr/bin/talc

class EmptyClass {
  function EmptyClass() : EmptyClass {
    # FIXME: should be able to call global functions!
    #puts("in EmptyClass constructor");
  }
  
  function to_s() : string {
    return "hello, world!";
  }
}

class Point {
  x: int = 0;
  y: int = 0;

  function Point(x0: int, y0: int) : Point {
    x = x0;
    y = y0;
    return;
    # FIXME: "this"!
    #this.x = x0;
    #this.y = y0;
  }
  
  function x() : int {
    return x;
  }
  
  function y() : int {
    return y;
  }
  
  function moveBy(dx: int, dy: int) : void {
    x += dx;
    y += dy;
  }
  
  function moveTo(x0: int, y0: int) : void {
    x = x0;
    y = y0;
  }
  
  function to_s() : string {
    return "(" + x.to_s() + "," + y.to_s() + ")";
  }
}

origin := new Point(0, 0);
puts(origin);
p := new Point(3, 4);
puts(p);
p.moveBy(-2 * p.x(), -2 * p.y());
puts(p);

puts(new EmptyClass().to_s());
puts(new EmptyClass());
empty := new EmptyClass();
o : object = empty;
puts(empty.to_s(), " should equal ", o.to_s());
