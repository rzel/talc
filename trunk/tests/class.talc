#!/usr/bin/talc

class EmptyClass {
  function EmptyClass() : EmptyClass {
    // Check that we can call a method from the constructor.
    m();
  }
  
  function m() : void {
    // Check that we can call a method from a method.
    assert m2();
    // Check that we can call the special to_s/toString method.
    assert to_s() == "!";
  }
  
  function m2() : bool {
    return true;
  }
  
  function to_s() : string {
    return "!";
  }
}

empty := new EmptyClass();
assert empty.m2();
assert empty.to_s() == "!";
o : object = empty;
assert empty.to_s() == o.to_s();

class Point {
  x: int = 0;
  y: int = 0;

  function Point(x0: int, y0: int) : Point {
    x = x0;
    y = y0;
  }
  
  function x() : int {
    return x;
  }
  
  function y() : int {
    return y;
  }
  
  function moveBy(dx: int, dy: int) : void {
    x += dx;
    y += dy;
  }
  
  function moveTo(x0: int, y0: int) : void {
    x = x0;
    y = y0;
  }
  
  function to_s() : string {
    return "(" + x.to_s() + "," + y.to_s() + ")";
  }
}

origin := new Point(0, 0);
assert origin.to_s() == "(0,0)";
p := new Point(3, 4);
assert p.to_s() == "(3,4)";
p.moveBy(-2 * p.x(), -2 * p.y());
assert p.to_s() == "(-3,-4)";
